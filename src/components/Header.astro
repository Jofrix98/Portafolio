---
interface Props {
  siteTitle?: string;
  navItems?: Array<{ text: string; href: string }>;
}

const props = Astro.props as Props;

const defaultNavItems = [
  { text: 'Experiencia', href: '#experience' },
  { text: 'Proyectos', href: '#projects' },
  { text: 'Acerca de', href: '#about' },
  { text: 'Contacto', href: '#contact' },
];

const navItems = props.navItems || defaultNavItems;
---

<header class="fixed top-0 left-0 w-full p-4 z-50 backdrop-blur-sm transition-all duration-300">
  <nav class="max-w-6xl mx-auto flex justify-between items-center gap-8">
    <div class="flex items-center gap-4">
      <a href="#home" class="text-white text-xl font-bold">{props.siteTitle || 'Jofre Coll Vila'}</a>
    </div>
    
    <div class="hidden md:flex items-center gap-4">
      {navItems.map((item) => (
        <a href={item.href} class="text-white hover:text-purple-400 transition-colors duration-300">
          {item.text}
        </a>
      ))}
    </div>

    <button class="md:hidden text-white" id="menu-toggle" aria-label="Toggle menu">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>
  </nav>

  <div class="md:hidden fixed top-16 left-0 w-full h-screen bg-black/90 transform translate-x-full transition-all duration-300 ease-in-out" id="mobile-menu">
    <div class="p-4">
      {navItems.map((item) => (
        <a href={item.href} class="block text-white text-lg py-2 hover:text-purple-400 transition-colors duration-300">
          {item.text}
        </a>
      ))}
    </div>
  </div>
</header>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');

  menuToggle.addEventListener('click', () => {
    mobileMenu.classList.toggle('translate-x-full');
  });

  // Close menu when clicking outside
  document.addEventListener('click', (e) => {
    if (!menuToggle.contains(e.target) && !mobileMenu.contains(e.target)) {
      mobileMenu.classList.add('translate-x-full');
    }
  });

  // Close menu when clicking a link
  mobileMenu.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu.classList.add('translate-x-full');
    });
  });
</script>

<style>
  section {
    scroll-margin-top: 60px; /* Prevents content from being hidden behind fixed header */
  }
  a{
    color: white;
    text-decoration: none;
  }
  #mobile-menu.translate-x-full {
    transform: translateX(-100%);
  }
  #mobile-menu.-translate-x-full {
    transform: translateX(0);
  }
</style>